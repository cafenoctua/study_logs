

-- Generated by AutomateDV (formerly known as dbtvault)

    WITH source_data AS (
    SELECT DISTINCT s.CUSTOMER_PK, s.CUSTOMER_PHONE, s.CUSTOMER_NAME, s.CUSTOMER_HASHDIFF, s.EFFECTIVE_FROM, s.RECORD_SOURCE
    FROM `sweepsump`.`tpch_sf10_test`.`v_stg_orders` AS s
    WHERE s.CUSTOMER_PK IS NOT NULL
        AND s.CUSTOMER_PHONE IS NOT NULL
),



source_data_with_count AS (
    SELECT a.*,
           b.source_count
    FROM source_data a
    INNER JOIN (
        SELECT t.CUSTOMER_PK,
            COUNT(*) AS source_count
        FROM (SELECT DISTINCT s.CUSTOMER_PK, s.CUSTOMER_HASHDIFF, s.CUSTOMER_PHONE FROM source_data AS s) AS t
        GROUP BY t.CUSTOMER_PK
    ) AS b
    ON a.CUSTOMER_PK = b.CUSTOMER_PK
),

latest_records AS (
    SELECT mas.CUSTOMER_PK, mas.CUSTOMER_HASHDIFF, mas.CUSTOMER_PHONE, mas.RECORD_SOURCE,
           mas.latest_rank,
           DENSE_RANK() OVER (PARTITION BY mas.CUSTOMER_PK
                              ORDER BY mas.CUSTOMER_HASHDIFF,
                                       mas.CUSTOMER_PHONE ASC
           ) AS check_rank
    FROM (
    SELECT inner_mas.CUSTOMER_PK, inner_mas.CUSTOMER_HASHDIFF, inner_mas.CUSTOMER_PHONE, inner_mas.RECORD_SOURCE,
           RANK() OVER (PARTITION BY inner_mas.CUSTOMER_PK
                        ORDER BY inner_mas.RECORD_SOURCE DESC
           ) AS latest_rank
    FROM `sweepsump`.`tpch_sf10_test`.`ma_sat_order_customer_phone` AS inner_mas
    INNER JOIN (SELECT DISTINCT s.CUSTOMER_PK FROM source_data as s ) AS spk
        ON inner_mas.CUSTOMER_PK = spk.CUSTOMER_PK
    ) AS mas
    WHERE latest_rank = 1
),

latest_group_details AS (
    SELECT lr.CUSTOMER_PK,
           lr.RECORD_SOURCE,
           MAX(lr.check_rank) AS latest_count
    FROM latest_records AS lr
    GROUP BY lr.CUSTOMER_PK, lr.RECORD_SOURCE
),



records_to_insert AS (



    SELECT source_data_with_count.CUSTOMER_PK, source_data_with_count.CUSTOMER_PHONE, source_data_with_count.CUSTOMER_NAME, source_data_with_count.CUSTOMER_HASHDIFF, source_data_with_count.EFFECTIVE_FROM, source_data_with_count.RECORD_SOURCE
    FROM source_data_with_count
    WHERE EXISTS (
        SELECT 1
        FROM source_data_with_count AS stage
        WHERE NOT EXISTS (
            SELECT 1
            FROM (
                SELECT lr.CUSTOMER_PK, lr.CUSTOMER_HASHDIFF, lr.CUSTOMER_PHONE, lr.RECORD_SOURCE,
                       lg.latest_count
                FROM latest_records AS lr
                INNER JOIN latest_group_details AS lg
                    ON lr.CUSTOMER_PK = lg.CUSTOMER_PK
                    AND lr.RECORD_SOURCE = lg.RECORD_SOURCE
            ) AS active_records
            WHERE stage.CUSTOMER_PK = active_records.CUSTOMER_PK
                AND stage.CUSTOMER_HASHDIFF = active_records.CUSTOMER_HASHDIFF


                AND stage.CUSTOMER_PHONE = active_records.CUSTOMER_PHONE
                AND stage.source_count = active_records.latest_count
        )
        AND source_data_with_count.CUSTOMER_PK = stage.CUSTOMER_PK
    )

)

SELECT * FROM records_to_insert